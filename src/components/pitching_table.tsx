import { createColumnHelper } from "@tanstack/react-table";
import type { PitchingStatRow } from "../interfaces/pitching_stats";

const columnHelperProperties = {
    header: (info: any) => info.column.id.replace(/_/g, " ").toUpperCase(),
    footer: (info: any) => info.column.id.replace(/_/g, " ").toUpperCase(),
    cell: (info: any) => info.getValue(),
};
const columnHelper = createColumnHelper<PitchingStatRow>();
export const pitchingColumns = {
    year: columnHelper.accessor("year", columnHelperProperties),
    player_id: columnHelper.accessor("player_id", columnHelperProperties),
    team: columnHelper.accessor("team", columnHelperProperties),
    month: columnHelper.accessor("month", columnHelperProperties),
    day: columnHelper.accessor("day", columnHelperProperties),
    game_id: columnHelper.accessor("game_id", columnHelperProperties),
    start_year: columnHelper.accessor("start_year", columnHelperProperties),
    end_year: columnHelper.accessor("end_year", columnHelperProperties),
    G: columnHelper.accessor("G", columnHelperProperties),
    GS: columnHelper.accessor("GS", columnHelperProperties),
    IP: columnHelper.accessor("IP", columnHelperProperties),
    TBF: columnHelper.accessor("TBF", columnHelperProperties),
    AB: columnHelper.accessor("AB", columnHelperProperties),
    H: columnHelper.accessor("H", columnHelperProperties),
    "1B": columnHelper.accessor("1B", columnHelperProperties),
    "2B": columnHelper.accessor("2B", columnHelperProperties),
    "3B": columnHelper.accessor("3B", columnHelperProperties),
    HR: columnHelper.accessor("HR", columnHelperProperties),
    UBB: columnHelper.accessor("UBB", columnHelperProperties),
    IBB: columnHelper.accessor("IBB", columnHelperProperties),
    HBP: columnHelper.accessor("HBP", columnHelperProperties),
    DP: columnHelper.accessor("DP", columnHelperProperties),
    TP: columnHelper.accessor("TP", columnHelperProperties),
    WP: columnHelper.accessor("WP", columnHelperProperties),
    BK: columnHelper.accessor("BK", columnHelperProperties),
    K: columnHelper.accessor("K", columnHelperProperties),
    P: columnHelper.accessor("P", columnHelperProperties),
    GB: columnHelper.accessor("GB", columnHelperProperties),
    LD: columnHelper.accessor("LD", columnHelperProperties),
    FB: columnHelper.accessor("FB", columnHelperProperties),
    PU: columnHelper.accessor("PU", columnHelperProperties),
    SH: columnHelper.accessor("SH", columnHelperProperties),
    SF: columnHelper.accessor("SF", columnHelperProperties),
    R: columnHelper.accessor("R", columnHelperProperties),
    ER: columnHelper.accessor("ER", columnHelperProperties),
    UER: columnHelper.accessor("UER", columnHelperProperties),
    ERA: columnHelper.accessor("ERA", columnHelperProperties),
    FIP: columnHelper.accessor("FIP", columnHelperProperties),
    xFIP: columnHelper.accessor("xFIP", columnHelperProperties),
    WHIP: columnHelper.accessor("WHIP", columnHelperProperties),
    "ERA-": columnHelper.accessor("ERA-", columnHelperProperties),
    "FIP-": columnHelper.accessor("FIP-", columnHelperProperties),
    "xFIP-": columnHelper.accessor("xFIP-", columnHelperProperties),
    BABIP: columnHelper.accessor("BABIP", columnHelperProperties),
    "BB%": columnHelper.accessor("BB%", columnHelperProperties),
    "K%": columnHelper.accessor("K%", columnHelperProperties),
    "K-BB%": columnHelper.accessor("K-BB%", columnHelperProperties),
    "K/BB": columnHelper.accessor("K/BB", columnHelperProperties),
    "BB/9": columnHelper.accessor("BB/9", columnHelperProperties),
    "K/9": columnHelper.accessor("K/9", columnHelperProperties),
    "LOB%": columnHelper.accessor("LOB%", columnHelperProperties),
    wOBA: columnHelper.accessor("wOBA", columnHelperProperties),
    "HR/FB%": columnHelper.accessor("HR/FB%", columnHelperProperties),
};